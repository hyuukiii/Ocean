# DataSource
spring.datasource.url=jdbc:mysql://mysql:3306/ocean_db?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
spring.datasource.username=ocean_user
spring.datasource.password=ocean_pass
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# HikariCP Connection Pool
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.auto-commit=true

# ========================================
# JPA ?? (?? ?? ??)
# ========================================
spring.jpa.database=MYSQL
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
# ? ??: ?? ????? ??? ?? ??/???? ??
spring.jpa.hibernate.ddl-auto=update
# ?? ? ?? ??? create ?? ? update? ??
# spring.jpa.hibernate.ddl-auto=create

spring.jpa.generate-ddl=true
# ?? ????? SQL ?? ????
spring.jpa.show-sql=false  
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.default_batch_fetch_size=100
spring.jpa.open-in-view=false

# JPA Naming Strategy (???/??? ??)
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

# ========================================
# MyBatis ?? (?? ?? ???)
# ========================================
mybatis.mapper-locations=classpath:mapper/**/*.xml
mybatis.type-aliases-package=com.example.ocean.domain
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=100
mybatis.configuration.default-statement-timeout=30

# ========================================
# ?? ?? (?? ?? ???)
# ========================================
logging.level.root=INFO
logging.level.com.example.ocean=INFO
logging.level.org.hibernate.SQL=INFO
logging.level.org.hibernate.type=INFO
logging.level.org.springframework.orm.jpa=INFO
logging.level.org.springframework.transaction=INFO

# ?? ????? ?? ??? ?? ??
logging.level.org.hibernate.stat=INFO
spring.jpa.properties.hibernate.generate_statistics=true

# ========================================
# File Upload ??
# ========================================
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
file.upload-dir=/app/uploads/

# ========================================
# Actuator (????)
# ========================================
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.health.mail.enabled=false
management.health.db.enabled=true

# ========================================
# Session ??
# ========================================
server.servlet.session.cookie.name=JSESSIONID
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.same-site=none
server.servlet.session.timeout=30m
server.servlet.session.cookie.domain=oceanspace.click

# ========================================
# JWT ??
# ========================================
app.jwt.secret=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970337336763979244226452948404D6351665468576D5A7134743777217A25432A
app.jwt.expiration=86400000
app.jwt.refresh-expiration=604800000

# ========================================
# ?? ??? URL
# ========================================
app.frontend.url=https://oceanspace.click
media.server.url=http://media-server:3001
media.server.public.url=https://oceanspace.click:3001

# ========================================
# OAuth2 ?? (????? ??)
# ========================================
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=https://oceanspace.click/login/oauth2/code/google

spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET}
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image,account_email
spring.security.oauth2.client.registration.kakao.redirect-uri=https://oceanspace.click/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.client-name=Kakao

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# ========================================
# AWS S3
# ========================================
cloud.aws.credentials.accessKey=${AWS_ACCESS_KEY}
cloud.aws.credentials.secretKey=${AWS_SECRET_KEY}
cloud.aws.region.static=ap-northeast-2
cloud.aws.stack.auto=false
cloud.aws.s3.bucket=s3sample-acorn2

# ========================================
# Email Configuration
# ========================================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=dbsgusrl09@gmail.com
spring.mail.password=llzkrvimqhvcwqqe
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000