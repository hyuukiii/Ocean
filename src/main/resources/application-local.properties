# src/main/resources/application-local.properties

# ========================================
# MySQL
# ========================================
spring.datasource.url=jdbc:mysql://127.0.0.1:3307/ocean_db?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&lowerCaseTableNames=1
spring.datasource.username=ocean_user
spring.datasource.password=ocean_pass

# ========================================
# JWT token Properties
# ========================================
app.jwt.secret=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970337336763979244226452948404D6351665468576D5A7134743777217A25432A
app.jwt.expiration=86400000
app.jwt.refresh-expiration=604800000

# ========================================
# DEV TEST URL
# ========================================
app.frontend.url=http://localhost:8080

## Media Server Configuration
 media.server.url=https://localhost:3001

## media.server.url=https://172.30.1.49:3001
media.server.public.url=https://192.168.0.16:3001

# ========================================
# Recording Configuration
# ========================================
recording.storage.path=/Users/hyunki/Ocean/recordings
recording.max.file.size=2147483648
recording.allowed.formats=webm,mp4

# ========================================
# OAuth2 Configuration
# ========================================
# Kakao OAuth2
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET}
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.client-name=Kakao

# Kakao Provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# ========================================
# Session Configuration
# ========================================
server.servlet.session.cookie.name=JSESSIONID
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.same-site=lax
server.servlet.session.timeout=30m
server.servlet.session.tracking-modes=cookie

# ========================================
# JPA Configuration
# ========================================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
# JPA Table Naming
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

# ========================================
# MyBatis Configuration
# ========================================
mybatis.mapper-locations=classpath:mapper/**/*.xml
mybatis.type-aliases-package=com.example.ocean.domain
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=100
mybatis.configuration.default-statement-timeout=30


#file.upload-dir=C:/uploads/workspace/

file.upload-dir=/Users/hyunki/Ocean/uploads/

# ========================================
# Logging
# ========================================
logging.level.root=INFO
logging.level.com.example.ocean=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security.web.authentication=TRACE
logging.level.org.springframework.security.oauth2.client=TRACE
logging.level.org.thymeleaf=DEBUG

# SQL
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ========================================
# Actuator (health check)
# ========================================
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# ========================================
# ========================================
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=always
server.error.include-exception=true
server.error.whitelabel.enabled=true

# ========================================
# Thymeleaf Configuration
# ========================================
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true

# ========================================
# Static Resources Configuration
# ========================================
spring.mvc.static-path-pattern=/**
spring.web.resources.static-locations=classpath:/static/
spring.web.resources.add-mappings=true
spring.web.resources.cache.period=0
spring.mvc.throw-exception-if-no-handler-found=false

# ========================================
# File Upload Configuration
# ========================================
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# ========================================
# Server Configuration
# ========================================
server.port=8080
server.servlet.context-path=/

# ========================================
# DevTools Configuration
# ========================================
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true

# ========================================
# JSON Configuration
# ========================================
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=Asia/Seoul


# ========================================
# Email Configuration
# ========================================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=dltnalssumin@gmail.com
spring.mail.password=gcbgxvdaekfeaful
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# AWS S3 Configuration
cloud.aws.credentials.accessKey=${AWS_ACCESS_KEY}
cloud.aws.credentials.secretKey=${AWS_SECRET_KEY}
cloud.aws.region.static=ap-northeast-2
cloud.aws.stack.auto=false
cloud.aws.s3.bucket=s3sample-acorn2

